#!/bin/bash

script_name=$0

# nagios states
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3

# Assign warning and critical thresholds based on partition size
function set_threshold(){
    # Size ranges and their corresponding Warning and Critical thresholds level
    Size_Range=( 0 80 250 500)
    Warn_Level=(80 90  96  98)
    Crit_Level=(90 95  98  99)

    part_size=$(awk -v size=$(df $1 | tail -n1 | awk '{print $2}') 'BEGIN { printf("%.0f", size/1024/1024)}')
    for item in ${!Size_Range[*]}
    do
        if [[ $part_size -ge ${Size_Range[$item]} ]] ; then
            warning=${Warn_Level[$item]}
            critical=${Crit_Level[$item]}
        fi
    done
}

function usage()
{
    echo "Invalid options, usage: ${script_name} -w 80 -c 90"
}

function used_percentage_partition()
{
    partition="$1"
    percent="$(df | grep $partition | head -n1 | awk '{print $5}' | tr -d %)"
    echo "$percent"
}


while getopts ":w:c:" opt; do
    case $opt in
    w)
        warning=$OPTARG
        ;;
    c)
        critical=$OPTARG
        ;;
    \?)
        usage
        exit $STATE_UNKNOWN
        ;;
    :)
        echo "Option -$OPTARG requires an argument."
        exit $STATE_UNKNOWN
        ;;
    esac
done

rootfs="$(used_percentage_partition ' /$')"
var="$(used_percentage_partition ' /var$')"
srv="$(used_percentage_partition ' /srv$')"
postgresql="$(used_percentage_partition ' /var/lib/postgresql$')"

target="$rootfs"
set_threshold "/"
if [ ! -z "$srv" ]; then
    target="$srv"
    set_threshold "/srv"
elif [ ! -z "$var" ]; then
    target="$var"
    set_threshold "/var"
elif [ ! -z "$postgresql" ]; then
    target="$postgresql"
    set_threshold "/var/lib/postgresql"
fi

MSG="Disk usage ${target}% (warning=${warning}, critical=${critical})"

if [ -z "$target" ]; then
    echo "UNKNOWN: $MSG"
    exit $STATE_UNKNOWN
fi

if [ $target -ge $critical ]; then
    echo "CRITICAL: $MSG"
    exit $STATE_CRITICAL
elif [ $target -ge $warning ]; then
    echo "WARNING: $MSG"
    exit $STATE_WARNING
else
    echo "OK: $MSG"
    exit $STATE_OK
fi
